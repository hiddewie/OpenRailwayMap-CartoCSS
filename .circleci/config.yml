version: 2.1

executors:
  default:
    machine:
      image: ubuntu-2204:current
#      docker_layer_caching: true
    resource_class: medium

jobs:

#  # Install Fly
#  wget -qO- 'https://getfly.fly.dev/linux-x86-64/flyctl.tgz' | tar xz
#  ./flyctl auth docker
#  docker build -t registry.fly.io/$FLY_APP_NAME:$CIRCLE_BUILD_NUM .
#  docker push registry.fly.io/$FLY_APP_NAME:$CIRCLE_BUILD_NUM
#  ./flyctl deploy -i registry.fly.io/$FLY_APP_NAME:$CIRCLE_BUILD_NUM -a $FLY_APP_NAME

  import-data:
    executor: default
    steps:
      - checkout
      - run: wget -qO- 'https://getfly.fly.dev/linux-x86-64/flyctl.tgz' | tar xz
      - run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USERNAME" --password-stdin
      - run: docker compose build db
      - run: docker compose build import
      - run: docker compose build martin-cp
      - run: docker compose up --wait db
#      - run: curl --location --progress-bar https://download.geofabrik.de/europe-latest.osm.pbf --output data/data.osm.pbf
      - run: curl --location --progress-bar https://download.geofabrik.de/europe/switzerland-latest.osm.pbf --output data/data.osm.pbf
      - run:
          no_output_timeout: 1h
          environment:
            OSM2PGSQL_DATAFILE: data.osm.pbf
            OSM2PGSQL_CACHE: '7000'
            OSM2PGSQL_NUMPROC: '2'
          command: docker compose up import
      - run: |
          docker compose stop db
          DB_CONTAINER_ID="$(docker compose ps --all --format json | jq -r 'select(.Service == "db") | .ID')"
          DB_IMAGE="$(docker compose ps --all --format json | jq -r 'select(.Service == "db") | .Image')"

          # Persist and squash data in new image
          docker cp "$DB_CONTAINER_ID:/var/lib/postgresql/postgres-data" db/postgres-data
          echo 'COPY postgres-data /var/lib/postgresql/postgres-data' >> db/Dockerfile
          
          docker compose build db
          docker compose push db
      - run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/hiddewie/OpenRailwayMap-vector/actions/workflows/deploy.yml/dispatches \
            -d "$(jq -c -n --arg branch "$CIRCLE_BRANCH" '{ref: $branch}')"

  #      - run:
#          environment:
#            TILES: low-med # << matrix.tiles >>
#            BBOX: '-11.3818,35.8891,25.0488,57.3976'
#          command: docker compose run --rm martin-cp
#      - run:
#          environment:
#            TILES: standard
#            BBOX: '-11.3818,35.8891,25.0488,57.3976'
#          command: docker compose run --rm martin-cp
#      - run:
#          environment:
#            TILES: speed
#            BBOX: '-11.3818,35.8891,25.0488,57.3976'
#          command: docker compose run --rm martin-cp
#      - run:
#          environment:
#            TILES: signals
#            BBOX: '-11.3818,35.8891,25.0488,57.3976'
#          command: docker compose run --rm martin-cp
#      - run:
#          environment:
#            TILES: electrification
#            BBOX: '-11.3818,35.8891,25.0488,57.3976'
#          command: docker compose run --rm martin-cp
#      - run:
#          environment:
#            TILES: gauge
#            BBOX: '-11.3818,35.8891,25.0488,57.3976'
#          command: docker compose run --rm martin-cp
#      - run: ls -las tiles/
##      - persist_to_workspace:
##          root: tiles
##          paths:
##            - '*.mbtiles'
#      - run: ./flyctl deploy --config martin-static.fly.toml --local-only

  deploy-proxy:
    executor: default
    steps:
      - checkout
      - run: wget -qO- 'https://getfly.fly.dev/linux-x86-64/flyctl.tgz' | tar xz
      - run: ./flyctl deploy --config proxy.fly.toml --local-only

#  deploy-tiles:
#    executor: default
#    steps:
#      - checkout
#      - attach_workspace:
#          # Must be absolute path or relative path from working_directory
#          at: tiles
#      - run: ls -lah tiles/

workflows:
  commit:
    jobs:
      - import-data:
          context:
            - github
#          matrix:
#            parameters:
#              tiles:
#                - low-med
#                - standard
#                - speed
#                - signals
#                - electrification
#                - gauge
#      - deploy-proxy:
#          context:
#            - fly-proxy
#      - deploy-tiles:
#          requires:
#            - generate-tiles
#          context:
#            - fly-tiles

#  auto-deployment:
#    triggers:
#      - schedule:
#          # Run daily at 3:47 UTC
#          cron: "47 3 * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - generate-tiles:
#          context:
#            - fly-tiles
#      - deploy-proxy:
#          context:
#            - fly-proxy
